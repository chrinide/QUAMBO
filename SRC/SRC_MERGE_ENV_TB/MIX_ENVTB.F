      PROGRAM MERGETB
      IMPLICIT NONE
      INTEGER NSP,NSORT1,NSORT2,I,NBASE,J,ISP,IC,JC,NADD,I1,J1
      INTEGER,PARAMETER::NSORTMAX=50,NRMAX=100
      REAL(8),PARAMETER::SMALL=.1D0
      INTEGER ID_SORT1(NSORTMAX),ID_SORT2(NSORTMAX)
      INTEGER LM_SORT1(NSORTMAX),LM_SORT2(NSORTMAX)
      INTEGER IQ2SORT1(16*NSORTMAX),IQ2SORT2(16*NSORTMAX)
      INTEGER NR1(NSORTMAX,NSORTMAX),NR2(NSORTMAX,NSORTMAX)
      INTEGER SORT2TO1(NSORTMAX),IBASE1(NSORTMAX),IBASE2(NSORTMAX)
      INTEGER ADD_SORT,ADD_PVECTOR,NDATABASE,ISAME
      INTEGER NCP(NSORTMAX,NSORTMAX,NRMAX)
      REAL(8) POTSHIFT
      INTEGER NQCOM
      REAL(8) R1(0:3,NSORTMAX,NSORTMAX,NRMAX),R2(0:3,NSORTMAX,NSORTMAX,NRMAX)
      REAL(8),ALLOCATABLE::HR1(:,:,:,:),HR2(:,:,:,:)
      REAL(8),ALLOCATABLE::SR1(:,:,:,:),SR2(:,:,:,:)

      ALLOCATE(HR1(16*NSORTMAX,16*NSORTMAX,NRMAX,2),HR2(16*NSORTMAX,16*NSORTMAX,NRMAX,2))
      ALLOCATE(SR1(16*NSORTMAX,16*NSORTMAX,NRMAX,2),SR2(16*NSORTMAX,16*NSORTMAX,NRMAX,2))
      ADD_SORT=0; ADD_PVECTOR=0; NDATABASE=0
      NSORT1=0; NCP=1
      ID_SORT1=0; LM_SORT1=0
      IQ2SORT1=0; NR1=0; IBASE1=0
      R1=0; HR1=0; SR1=0
      OPEN(14,FILE='ENTB.RAW',STATUS='OLD')
      DO 
      NSORT2=0; ID_SORT2=0; LM_SORT2=0; IQ2SORT2=0; NR2=0
      IBASE2=0; R2=0; HR2=0; SR2=0; SORT2TO1=0
      READ(14,*,END=100)NSP
      NDATABASE=NDATABASE+1
      WRITE(*,'(" CYCLE=",I3)')NDATABASE
      READ(14,*)NSORT2
      NBASE=0
      DO I=1,NSORT2
        READ(14,*)ID_SORT2(I),LM_SORT2(I)
        IQ2SORT2(NBASE+1:NBASE+LM_SORT2(I))=I
        IBASE2(I)=NBASE
        NBASE=NBASE+LM_SORT2(I)
      ENDDO
      DO I=1,NSORT2; DO J=1,NSORT2
        READ(14,*)NR2(I,J)
      ENDDO; ENDDO ! J,I
      DO I=1,NSORT2; DO J=1,NSORT2
        READ(14,*)
        READ(14,*)R2(0:3,I,J,1:NR2(I,J))
      ENDDO; ENDDO ! J,I
      DO ISP=1,NSP; DO I=1,NBASE; DO J=1,NBASE
      READ(14,*)
      DO IC=1,NR2(IQ2SORT2(I),IQ2SORT2(J))
      READ(14,*)HR2(I,J,IC,ISP)
      ENDDO; ENDDO; ENDDO; ENDDO ! IC,J,I,ISP
      DO ISP=1,NSP; DO I=1,NBASE; DO J=1,NBASE
      READ(14,*)
      DO IC=1,NR2(IQ2SORT2(I),IQ2SORT2(J))
      READ(14,*)SR2(I,J,IC,ISP)
      ENDDO; ENDDO; ENDDO; ENDDO ! IC,J,I,ISP

! COMPARE
      NADD=0
      IF(NDATABASE.EQ.1)THEN ! FIRST DATABASE
      NSORT1=NSORT2; IBASE1=IBASE2; NR1=NR2; R1=R2; HR1=HR2; SR1=SR2
      ID_SORT1=ID_SORT2; LM_SORT1=LM_SORT2
      CYCLE
      ENDIF

! CALCULATE RIGID POT SHIFT
      NQCOM=0; POTSHIFT=0
      DO I=1,NSORT2; DO J=1,NSORT1
      IF(ID_SORT2(I).EQ.ID_SORT1(J))GOTO 90
      ENDDO ! J
      CYCLE
90    CONTINUE
      DO IC=1,NR2(I,I); IF(R2(0,I,I,IC).GT..001)CYCLE; GOTO 91; ENDDO
      STOP'NO SELF TERM-I!'
91    CONTINUE
      DO JC=1,NR1(J,J); IF(R1(0,J,J,JC).GT..001)CYCLE; GOTO 92; ENDDO
92    CONTINUE
      DO J1=1,LM_SORT2(I)
        POTSHIFT=POTSHIFT+SUM(HR1(IBASE1(J)+J1,IBASE1(J)+J1,JC,:)- &
                             &HR2(IBASE2(I)+J1,IBASE2(I)+J1,IC,:))
      ENDDO
      NQCOM=NQCOM+LM_SORT2(I)*NSP
      ENDDO ! I
      POTSHIFT=POTSHIFT/NQCOM
      WRITE(*,'(" NDATABASE=",I2," POTSHIFT=",F8.3)')NDATABASE,POTSHIFT; READ(*,*)
      HR2=HR2+POTSHIFT*SR2
      DO I=1,NSORT2; DO J=1,NSORT1
      IF(ID_SORT2(I).EQ.ID_SORT1(J))GOTO 101
      ENDDO ! J
! FIND A NEW SORT
      WRITE(*,'(" NEW SORT ADDED!")')
      ADD_SORT=ADD_SORT+1
      NADD=NADD+1
      ID_SORT1(NSORT1+NADD)=ID_SORT2(I)
      LM_SORT1(NSORT1+NADD)=LM_SORT2(I)
      IBASE1  (NSORT1+NADD)=IBASE1(NSORT1+NADD-1)+LM_SORT1(NSORT1+NADD-1)
      SORT2TO1(I)=NSORT1+NADD
      CYCLE
101   CONTINUE
      SORT2TO1(I)=J
      ENDDO ! I
      DO I=1,NSORT2; I1=SORT2TO1(I)
      DO J=1,NSORT2; J1=SORT2TO1(J)
! FOR NEW SORT
      IF(I1.GT.NSORT1.OR.J1.GT.NSORT1)THEN
      NR1(I1,J1)=NR2(I,J)
      R1(0:3,I1,J1,1:NR1(I1,J1))=R2(0:3,I,J,1:NR2(I,J)) 
      HR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),1:NR1(I1,J1),:)= &
     &HR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),1:NR2(I ,J ),:)
      SR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),1:NR1(I1,J1),:)= &
     &SR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),1:NR2(I ,J ),:)

      ELSE
      DO IC=1,NR2(I,J)
      ISAME=0
      DO JC=1,NR1(I1,J1)
      IF(ABS(R2(0,I,J,IC)-R1(0,I1,J1,JC)).GT.SMALL)CYCLE
      IF(ABS(R2(1,I,J,IC)-R1(1,I1,J1,JC)).GT.SMALL)CYCLE
      IF(ABS(R2(2,I,J,IC)-R1(2,I1,J1,JC)).GT.SMALL)CYCLE
      IF(ABS(R2(3,I,J,IC)-R1(3,I1,J1,JC)).GT.SMALL)CYCLE
! CHECK POSSIBLE SIGN INCONSISTENCY
      IF(MINVAL(SR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)* &
               &SR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),IC,:)) &
               &.LT.-1.E-4)THEN
      STOP'SIGN INCONSISTENCY DETECTED!'
      ENDIF
      ISAME=ISAME+1
      WRITE(*,'(" ISAME=",I2," R1/R2:",4F8.3,3X,4F8.3)')ISAME,R1(0:3,I1,J1,JC),R2(0:3,I,J,IC)
      IF(ISAME.GT.1)STOP 'DUPLICATED VECTORS EXISTING IN THE DATABASE!'
! IDENTICAL POSITION VECTOR, TAKE SOME AVERAGE
      NCP(I1,J1,JC)=NCP(I1,J1,JC)+1
      HR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)= &
    &(HR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),IC,:)+ &
    & HR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)*(NCP(I1,J1,JC)-1))/NCP(I1,J1,JC)
      SR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)= &
    &(SR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),IC,:)+ &
    & SR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)*(NCP(I1,J1,JC)-1))/NCP(I1,J1,JC)
      ENDDO ! JC
      IF(ISAME.EQ.0)THEN
! NEW POSITION VECTOR
      WRITE(*,'(" NEW POSITION VECTOR ADDED! SORT PAIR:",2I3)')I1,J1
      ADD_PVECTOR=ADD_PVECTOR+1
      NR1(I1,J1)=JC
      R1(0:3,I1,J1,JC)=R2(0:3,I,J,IC)
      HR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)= &
     &HR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),IC,:)
      SR1(IBASE1(I1)+1:IBASE1(I1)+LM_SORT1(I1),IBASE1(J1)+1:IBASE1(J1)+LM_SORT1(J1),JC,:)= &
     &SR2(IBASE2(I )+1:IBASE2(I )+LM_SORT2(I ),IBASE2(J )+1:IBASE2(J )+LM_SORT2(J ),IC,:)
      ENDIF ! ISAME
      ENDDO ! IC
      ENDIF
      ENDDO; ENDDO ! J,I
      NSORT1=NSORT1+NADD
      ENDDO
100   CLOSE(14)
! OUT PUT
      WRITE(*,'(" NUMBER OF DATABASE MERGED:",I4)')NDATABASE
      WRITE(*,'(" NEW SORT ADDED WRT 1st database:",I3)')ADD_SORT
      WRITE(*,'(" NEW PVECTOR ADDED WRT 1st database:",I3)')ADD_PVECTOR
      WRITE(*,'(" TOTAL SORTS:",I4)')NSORT1
      WRITE(*,'(" TOTAL NR1:",I4)')SUM(NR1)
      WRITE(*,'(" MAX NCP:",I4)')MAXVAL(NCP)
      NBASE=SUM(LM_SORT1(1:NSORT1))
      DO I=1,NSORT1
        IQ2SORT1(IBASE1(I)+1:IBASE1(I)+LM_SORT1(I))=I
      ENDDO
      OPEN(14,FILE='ENTB.MIX',STATUS='REPLACE')
      WRITE(14,'(I5," ! NSP")')NSP
      WRITE(14,'(I5," ! NSORT")')NSORT1
      DO I=1,NSORT1; WRITE(14,'(I8,I5," ! ID,DIM,ISORT=",I3)')ID_SORT1(I),LM_SORT1(I),I; ENDDO
      DO I=1,NSORT1; DO J=1,NSORT1
      WRITE(14,'(I5," ! NR12,ISORT PAIR=",2I4)')NR1(I,J),I,J
      ENDDO; ENDDO
      DO I=1,NSORT1; DO J=1,NSORT1
      WRITE(14,'(" R12 LIST: ISORT PAIR=",2I4)')I,J
      WRITE(14,'(4F10.4)')R1(0:3,I,J,1:NR1(I,J))
      ENDDO; ENDDO
      DO ISP=1,NSP; DO I=1,NBASE; DO J=1,NBASE
      WRITE(14,'(" HR/DIST LIST: IQ PAIR=",2I4," ISP=",I2)')I,J,ISP
      DO IC=1,NR1(IQ2SORT1(I),IQ2SORT1(J))
      WRITE(14,'(F12.6,F8.2)')HR1(I,J,IC,ISP),R1(0,IQ2SORT1(I),IQ2SORT1(J),IC)
      ENDDO; ENDDO; ENDDO; ENDDO
      DO ISP=1,NSP; DO I=1,NBASE; DO J=1,NBASE
      WRITE(14,'(" SR/DIST LIST: IQ PAIR=",2I4," ISP=",I2)')I,J,ISP
      DO IC=1,NR1(IQ2SORT1(I),IQ2SORT1(J))
      WRITE(14,'(F12.6,F8.2)')SR1(I,J,IC,ISP),R1(0,IQ2SORT1(I),IQ2SORT1(J),IC)
      ENDDO; ENDDO; ENDDO; ENDDO
      CLOSE(14)

      END PROGRAM MERGETB
